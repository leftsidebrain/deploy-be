// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int     @id @default(autoincrement())
  fullname    String?
  username    String
  password    String
  email       String  @unique
  profile_pic String?
  bio         String?
  banner      String?

  posts     Posts[]
  likes     Like[]
  followers Follows[] @relation("followers")
  following Follows[] @relation("following")
}

model Posts {
  id       Int     @id @default(autoincrement())
  content  String?
  userId   Int
  parentId Int?

  post     Posts?      @relation("PostReplies", fields: [parentId], references: [id])
  comments Posts[]     @relation("PostReplies")
  author   User        @relation(fields: [userId], references: [id])
  images   PostImage[]
  likes    Like[]
}

model PostImage {
  id     Int     @id @default(autoincrement())
  image  String?
  postId Int
  post   Posts   @relation(fields: [postId], references: [id])
}

model Like {
  id     Int   @id @default(autoincrement())
  userId Int
  postId Int
  user   User  @relation(fields: [userId], references: [id])
  post   Posts @relation(fields: [postId], references: [id])

  @@unique([userId, postId])
}

model Follows {
  id          Int  @id @default(autoincrement())
  followerId  Int
  followingId Int
  follower    User @relation("followers", fields: [followerId], references: [id])
  following   User @relation("following", fields: [followingId], references: [id])
}
